<?php

/**
 * @file config.inc.php 
 * Server configuration directives
 *
 * @defgroup confdir Configuration Directives
 * Configuration directives for CAS server
 * @{
 */
/**
  Absolute path to your CAS install directory.
 */
define('SimpleSamlPATH', '/path/to/simplesamlphp/lib');
define('ENT_SERVER', 'https://www.dev.laclasse.com');

define('ENT_SERVER', 'URL of the ENT server'); //https://www.dev.laclasse.com
define('CAS_URL', 'URL of CAS server'); // http://..../sso
define('SERVICE', ENT_SERVER . '/pls/education/!page.laclasse');
define('INSCRIPTION_URL', ENT_SERVER . '/pls/public/!page.laclasse?contexte=INSCRIPTION&rubrique=0');

/*
  Server mode
 * @param MODE
 *  - 'dev'   : http protocol allowed
 *  - 'prod'  : https required
 *  - 'debug' : 'dev' mode plus debug info display
 */
$CONFIG['MODE'] = 'dev';

/** CAS protocol compatibility
 * @param CAS_VERSION Possible values are : 1.0, 2.0.
 * @note Not used ATM
 */
$CONFIG['CAS_VERSION'] = '2.0';
//-------------------------------------------------------------------
// DATABASE BACKEND TYPE 
$CONFIG['DATABASE'] = 'ORACLE';
//$CONFIG['DATABASE']= 'MYSQL'; 
//-------------------------------------------------------------------
//-------------------------------------------------------------------
// DATABASE BACKEND TYPE Only supports oracle and mysql
$CONFIG['DATABASE'] = 'ORACLE';
//$CONFIG['DATABASE']= 'MYSQL';
//-------------------------------------------------------------------
//------------------------------------------------------------------------------
// Constantes de connexion au Backend.
//------------------------------------------------------------------------------
/** Database name */
define('BACKEND_DBNAME', '//db.greap.web.app:1521/NICEDB'); // case of mysql : mysql:host=mysqlserver.com;dbname=databasename'
/** Database username */
define('BACKEND_DBUSER', 'some_db_user');
/** Database password */
define('BACKEND_DBPASS', 'incredible_hard_to_guess_password');


//------------------------------------------------------------------
//php simple saml authentication sources in authSource.php
//-------------------------------------------------------------------
// Profile Parent Eleve Metadata name  in /simplesamlphp/config authSource.php�
$CONFIG['PARENT_ELEVE_SOURCE'] = 'simpleexample';
// Profile Agent Metadata name in /simplesamlphp/config authSource.php
$CONFIG['AGENT_SOURCE'] = 'Agentportal';
//-------------------------------------------------------------------

/* * **** Debugging*** */
/* Values 
  DEBUG  = 1;
  INFO      = 2;
  WARN      = 3;
  ERROR   = 4;
  FATAL   = 5;
  OFF   = 6;  //no log
 */
$CONFIG['DEBUG_LEVEL'] = 1;
$CONFIG['DEBUG_FILE'] = '/tmp/log.txt';
//----------------------------------------------------------------------
/** Redis server array
 * Redis is the datastorage for versions above 1.1
 * @param REDIS_SERVERS Array of servers. Each server is an array of (host, port).
 * Thus, REDIS_SERVERS contains an array of arrays. It is looped over
 * and each entry is as parameter to
 * Rediska::addServer
 * @param REDIS_ROOT String containing the base root for ALL Redis get/set operations
 * related to ticket handling.
 */
$CONFIG['REDIS_SERVERS'] = array(array('localhost', 6379));
$CONFIG['REDIS_ROOT'] = 'org.example.sso.tickets.';

/** Twitter client config
 * @param DISPLAY_NEWS
 * @param TWITTER_ACCOUNT String prefixed with @ containing the account to use on twitter
 * (e.g.@laclasse)
 * @param TWITTER_HASHTAG String with the hashtag we're looking for, prefixed with # 
 * (e.g. '#sys')
 * @param REDIS_NEWS_ROOT The enws root we use for the twitter service
 * This param overrides $CONFIG['REDIS_ROOT']
 * See if we have to display news on the authentication form
 * The news are feeded by a twitter account
 */
$CONFIG['DISPLAY_NEWS'] = true;
$CONFIG['TWITTER_ACCOUNT'] = '@laclasse';
$CONFIG['TWITTER_HASHTAG'] = '#sys';
$CONFIG['TWITTER_CONSUMER_KEY'] = 'consumer_key';
$CONFIG['TWITTER_CONSUMER_SECRET'] ='consumer_key_secret';
$CONFIG['TWITTER_OAUTH_TOKEN'] ='oauth_token';
$CONFIG['TWITTER_OAUTH_SECRET'] = 'oauth_secret';
$CONFIG['REDIS_NEWS_ROOT'] = 'org.example.sso.last_message.';

/**
  Timeout in second for each kind of ticket
  LT for LoginTicket : The timeout shouldbe very short. It should not be over 4 minutes.
  ST for ServiceTicket : Could be short too because it  is a one shot ticket tha have to
  be validated : 4 minutes for example
  ST for TicketGrantingTicket : Could be long : 8 hours for example
 */
$CONFIG['LT_TIMOUT'] = 4 * 60;
$CONFIG['ST_TIMOUT'] = 4 * 60;
$CONFIG['TGT_TIMOUT'] = 8 * 60 * 60;
$CONFIG['PT_TIMOUT'] = 4 * 60;
$CONFIG['PGT_TIMOUT'] = 4 * 60;
$CONFIG['PGTIOU_TIMOUT'] = 4 * 60;
/**
  Logging and tracker config
  The logging format is as follows (All field are Tab separated):
  CODE USERNAME IP DATE
  Available codes are :
  => LOGIN_SUCCESS
  => LOGIN_FAILURE
  => LOGOUT_SUCCESS
  => TRACKING_ALERT
 */
$CONFIG['ACTIVATE_TRACKING'] = true;
// Array of tracked users : usernames have to be uppercased
$CONFIG['TRACKED_USERS'] = array('PLEVALLOIS', 'MBLANC');
// Sending mail alert ?
$CONFIG['SEND_ME_A_MAIL'] = true;
// Mail of admin who need to receive the tracking alert 
$CONFIG['MAIL_ADMIN'] = "you@yourdomain.com";

/*
 * Authentication backend
 */

include_once('lib/authentication.php');



//--------------------------------------------------------------------------------------------
// Requete SQL de validation des login/pwd
//------------------------------------------------------------------------------
define('SQL_AUTH', 'select user from table having certain login and password');

//------------------------------------------------------------------------------
// Requete SQL d'extration des donn�es pour le jeton d'authentification CAS.
//
// You can define one Attributes provider per authorized service
// By default, the sql statment for DB backend is SQL_FOR_ATTRIBUTES
//------------------------------------------------------------------------------
define('SQL_FOR_ATTRIBUTES', 'select whatever field you need                 
		from whatever, table, is, required
		where u.login = :LOGIN and few joins');

define('MY_LDAP_REQUEST_STRING', 'Some Ldap request to provide your attributes');

//------------------------------------------------------------------------------
// Federation d'identit� : Requ�tes de backend.
//------------------------------------------------------------------------------
//-----------------------------------------------------------------------------
//*** search agent by institutional email***/
define('Search_Agent_by_mail', 'selcet user having a certain institutional  email from table'); ///attention to upper and small case comparation
//-------------------------------------------------------------------------------
//*** search user by email for google login ***//
define('Search_user_by_mail', 'select user having a personal email from table');

//-----------------------------------------------------------------------------
// search parent with name, firstname, etablissement, son's sconet id //
// subquery changed to in 

define('Search_Parent_By_Name_EleveId', 'select parent having a certain name and having a children with certain sconetid ');
//----------------------------------------------------------------------------
//--------------------------------------------------------------------------
//*** search eleve by sconet id and name in the database**/ 
define('Search_student_By_Name_SconetId', '');

define('accss_id',"1044"); 
define('secret_key',"secret"); 

?>
